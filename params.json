{
  "name": "Webapimaildemo",
  "tagline": "WebApi",
  "body": "##Introduction\r\n\r\nIn this workshop we will take a look at how we can make use of Web API, .NET MVC and an email delivery and management service to implement an email sending web app.\r\nWe will be building the app from the ground up, and hopefully by the end of it you will manage to have a fully functional spam machine to impress and annoy any of your friends.\r\n\r\n##Concepts/Technologies used in this workshop\r\n\r\n-[ASP.NET Web API](https://www.asp.net/web-api)\r\n\r\n-[ASP.NET MVC](https://www.asp.net/mvc)\r\n\r\n-[SendGrid API](https://sendgrid.com/docs/API_Reference/Web_API/)\r\n\r\n##What is Web API?\r\n\r\nASP.NET Web API is a framework that makes it easy to build [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) services that reach a broad range of clients, including browsers and mobile devices. [ASP.NET](https://www.asp.net/) Web API is an ideal platform for building [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) applications on the .NET Framework.\r\n\r\n[More on the official ASP.NET Microsoft Documentation Website](https://www.asp.net/web-api)\r\n\r\n##What is MVC?\r\n\r\nModel-View-Controller (MVC) is a software architecture - the structure of the system - that separates domain/application/business (whatever you prefer) logic from the rest of the user interface. It does this by separating the application into three parts: the model, the view, and the controller.\r\n\r\nThe model manages fundamental behaviors and data of the application. It can respond to requests for information, respond to instructions to change the state of its information, and even to notify observers in event-driven systems when information changes. This could be a database, or any number of data structures or storage systems. In short, it is the data and data-management of the application.\r\n\r\nThe view effectively provides the user interface element of the application. It'll render data from the model into a form that is suitable for the user interface.\r\n\r\nThe controller receives user input and makes calls to model objects and the view to perform appropriate actions.\r\n\r\nAll in all, these three components work together to create the three basic components of MVC.\r\n\r\n##What is SendGrid?\r\n\r\nSendGrid is a transactional email delivery and management service. Basically, its API allows you to send automated emails to a large number of clients, and these types of services are behind most of the mail you receive from online stores, social media websites and so forth.\r\n\r\n##Let's get started\r\n\r\nAs I said, we will be starting from scratch, so we need to fire up [Visual Studio](https://www.visualstudio.com/) and create a new project. Select ASP.NET Web Application under the Visual C#'s Web tab. Next, we select Web API and tick the checkboxes for MVC and Web API under \"Add folders and core references for:\". What  this does is that it creates a template for the project, adding the folders and references for a MVC based project. Now we should be all set-up to start writing some code.\r\n\r\n##Creating the model\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}